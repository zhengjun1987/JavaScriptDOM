1.JavaScript历史问题
    肆意扩张简单易上手和代码严谨度之间的取舍造就了JavaScript现在的尴尬局面：扩张了市场份额但历史兼容问题百出
    不负责任的"所见即所得"、"剪切粘贴"生成的JavaScript代码
    恶意滥用弹窗导致用户对JavaScript的抵触，历史欠账
    类似被滥用导致走向末路的技术——Flash短视频技术

2.向CSS学习：结构与样式分离
    使用DOM直接获取HTML页面的元素节点进行操作，而非对元素节点的属性或者文本进行操作
    即使用户浏览器不支持JavaScript，也可以最大限度兼容

3.性能问题
    getElementBy...之类的方法尽量减少调用，一次性调用之后储存在全局变量中备用
    合并和放置脚本文件：<script>标签在页面文件中的位置也会影响到页面的加载速度，最好放置在</body>的上面最后一行
    压缩脚本：尽量精简脚本文件数量、脚本内容字数行数（有专用工具可以使用）